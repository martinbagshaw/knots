{"version":3,"sources":["style/styleFunctions.js","hooks/useHover.jsx","style/styleVariables.js","style/Typography.jsx","components/MenuLink.jsx","style/Layout.jsx","components/MenuView.jsx","components/Buttons.jsx","components/KnotView.jsx","knots/Fig8Detailed.jsx","knots/common/knotStyles.jsx","knots/figure8/BasicFig8.jsx","knots/bowline/BasicBowline.jsx","knots/clove/BasicClove.jsx","content.js","routes.js","components/Chevron.jsx","components/Nav.jsx","App.jsx","serviceWorker.js","index.js"],"names":["darkenFunc","amount","colour","css","darken","useHover","useState","value","setValue","ref","useRef","handleMouseOver","handleMouseOut","useEffect","node","current","addEventListener","removeEventListener","colors","fontFamily","breakpoint","fontMixin","subTitleMixin","contentMixin","Title","styled","h1","Paragraph","p","KnotLink","Link","KnotTitle","h2","props","ishovered","darkness","MenuLink","path","SimpleSvg","name","hoverRef","isHovered","to","itemcolour","containerMixin","View","section","MenuScreen","MenuView","knots","routes","filter","item","map","key","buttonLinkMixin","Button","button","Info","article","Knot","div","StepButton","isBlack","KnotView","content","DetailedSvg","knotWidth","stepCount","step","getStep","console","log","isReverse","intro","onClick","width","stepNumber","green","grey","red","mint","purple","orange","darkBlue","frontBlue","dash","keyframes","part","1","2","3","Rope","animationNumber","Fig8Detailed","version","xmlns","xlink","x","y","style","viewBox","enableBackground","xmlSpace","id","fill","stroke","stroke-width","stroke-miterlimit","d","stroke-linecap","Mask","Carabiner","pathOne","pathOneHover","pathTwo","pathTwoHover","pathThree","pathThreeHover","pathFour","pathFourHover","HoverFig8","svg","BlueRope","BasicFig8","enable-background","pathFive","pathFiveHover","pathSix","pathSixHover","pathSeven","pathSevenHover","HoverBowline","PurpleRope","BasicBowline","GreenRope","HoverClove","figEight","title","step1","step2","step3","bowline","clove","italian","exact","component","Chevron","titleTag","direction","arrowDirection","left","right","up","down","transform","transformOrigin","points","strokeWidth","fillRule","NavBar","NavContainer","nav","NavLink","BackLink","Nav","AppContainer","Main","main","App","route","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c803e2e.chunk.js","sourcesContent":["import { css } from 'styled-components';\nimport { darken } from 'polished';\n\nconst darkenFunc = (amount = 0.3, colour) => css`\n  ${darken(amount, colour)}\n`;\n\nexport { darkenFunc };","import { useState, useEffect, useRef } from 'react';\nconst useHover = () => {\n  const [value, setValue] = useState(false);\n\n  const ref = useRef(null);\n\n  const handleMouseOver = () => setValue(true);\n  const handleMouseOut = () => setValue(false);\n\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (node) {\n        node.addEventListener('mouseover', handleMouseOver);\n        node.addEventListener('mouseout', handleMouseOut);\n\n        return () => {\n          node.removeEventListener('mouseover', handleMouseOver);\n          node.removeEventListener('mouseout', handleMouseOut);\n        };\n      }\n    },\n    [ref] // Recall only if ref changes\n  );\n\n  return [ref, value];\n}\n\nexport default useHover;","const colors = {\n  green : '#70bf44', // 112, 191, 68   - bg: 199, 230, 182\n  grey : '#6a6a6a', // 106, 106, 106\n  white : '#ffffff',\n  black : '#000000',\n  \n  blue : '#49b4f1', // 127, 193, 255   - bg: 203, 230, 255\n  red : '#e74e42',\n  mint: '#09d3ac',\n  \n  purple: '#d55fff',\n  oliveGreen: '#71842f',\n  orange : '#f37c38',\n\n  lightBlue: '#d2f4ff',\n  darkBlue: '#1193dd',\n\n  frontBlue: '#49b4f1',\n  backBlue: '#1193dd',\n};\n\nconst fontFamily = {\n  main : '\\'Asap\\', Helvetica, Arial, sans-serif',\n  blockquote : '\\'Lato\\', sans-serif'\n}\n\nconst fontWeight = {\n  normal : 400,\n  bold : 600\n};\n\nconst breakpoint = {\n  Xsmall: 480,\n  small: 600,\n  tablet: 768,\n  laptop: 1024,\n  Xlaptop: 1280,\n  large: 1440\n}\n\nexport { colors, fontFamily, fontWeight, breakpoint };","import styled, { css } from 'styled-components';\nimport { breakpoint, fontFamily } from './styleVariables';\n\nconst fontMixin = css`\n  font-family: ${fontFamily.main};\n  line-height: 1.5;\n  font-weight: 600;\n  margin: 0;\n`;\n\nconst subTitleMixin = css`\n  font-size: 1.5rem;\n  ${fontMixin};\n  @media (min-width: ${breakpoint.tablet}px) {\n    font-size: 2rem;\n  }\n`;\n\nconst titleMixin = css`\n  font-size: 2rem;\n  ${fontMixin};\n  @media (min-width: ${breakpoint.tablet}px) {\n    font-size: 2.5rem;\n  }\n  @media (min-width: ${breakpoint.Xlaptop}px) {\n    font-size: 3rem;\n  }\n`;\n\nconst contentMixin = css`\n  font-size: 1rem;\n  font-family: ${fontFamily.main};\n  line-height: 1.35;\n  font-weight: 400;\n  margin: 0;\n  @media (min-width: ${breakpoint.tablet}px) {\n    font-size: 1.25rem;\n  }\n`;\n\nconst Title = styled.h1`\n  ${subTitleMixin};\n  margin-bottom: 0.5rem;\n`;\n\nconst Paragraph = styled.p`\n  ${contentMixin};\n  margin-bottom: 0.5rem;\n`;\n\nexport { subTitleMixin, titleMixin, contentMixin, Title, Paragraph };","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled, { css } from 'styled-components';\n\nimport { darkenFunc } from '../style/styleFunctions';\nimport useHover from '../hooks/useHover';\nimport { breakpoint } from '../style/styleVariables';\nimport { subTitleMixin } from '../style/Typography';\n\nconst KnotLink = styled(Link)`\n  width: 50%;\n  height: 50%;\n  max-width: 50vw;\n  max-height: 50vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n  text-decoration: none;\n  > svg {\n    width: auto !important;\n    height: auto !important;\n  }\n  @media (min-width: ${breakpoint.tablet}px) {\n    width: 25%;\n    max-width: 25vw;\n  }\n  h2, svg {\n    transition: 0.5s;\n  }\n`;\n\n// change darkness depending upon knot\n// - clove hitch\nconst KnotTitle = styled.h2`\n  ${subTitleMixin};\n  pointer-events: none;\n  color: ${props => props.ishovered ?\n    css`${darkenFunc(props.darkness, props.colour)}` : \n    props.colour};\n`;\n\nconst MenuLink = ({ path, SimpleSvg, name, colour }) => {\n  const [hoverRef, isHovered] = useHover();\n  const darkness = name === 'Clove Hitch' ? 0.1 : 0.2;\n  return (\n    <KnotLink to={path} itemcolour={colour} ref={hoverRef}>\n      {SimpleSvg && <SimpleSvg ishovered={isHovered} />}\n      <KnotTitle colour={colour} darkness={darkness} ishovered={isHovered}>\n        {name}\n      </KnotTitle>\n    </KnotLink>\n  );\n}\n\nexport default MenuLink;","import styled, { css } from 'styled-components';\nimport { breakpoint } from './styleVariables';\n\nconst containerMixin = css`\n  width: 100%;\n  max-width: 1440px;\n  margin: 0 auto;\n  padding: 1rem;\n  box-sizing: border-box;\n`;\n\nconst View = styled.section`\n  ${containerMixin};\n  padding: 0;\n  max-height: calc(100vh - 5rem);\n  height: calc(100vh - 5rem);\n  display: flex;\n  flex-direction: column-reverse;\n  @media only screen and (min-width: ${breakpoint.tablet}px) {\n    padding: 1rem;\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport { containerMixin, View };","// home page\n// - shows overview of knots\n// - more like a menu though\nimport React from 'react';\nimport styled from 'styled-components';\nimport routes from '../routes';\nimport MenuLink from './MenuLink';\nimport { View } from '../style/Layout';\n\nconst MenuScreen = styled(View)`\n  padding: 1rem;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst MenuView = () => {\n  const knots = routes.filter(item => item.path !== '/');\n  return (\n  <MenuScreen>\n    {knots.map(({ path, ...props }) => {\n      return (\n        <MenuLink key={path} path={path} {...props} />\n      )\n    })}\n  </MenuScreen>\n  )\n};\n\nexport default MenuView;\n","import styled, { css } from 'styled-components';\nimport { colors, fontFamily } from '../style/styleVariables';\n\nconst buttonLinkMixin = css`\n  border: 0;\n  margin-top: 1rem;\n  min-width: 9rem;\n  padding: 1rem 2rem;\n  line-height: 1;\n  font-family: ${fontFamily.main};\n  font-weight: 600;\n  font-size: 1.5rem;\n  letter-spacing: 0.1rem;\n  text-decoration: none;\n  white-space: nowrap;\n  border-radius: 0.25rem;\n  cursor : pointer;\n  box-sizing: border-box;\n  transition: all ease-in-out 0.3s;\n  background-color: ${colors.blue};\n  color: ${colors.white};\n  &:hover,\n  &:focus {\n    outline: none;\n    background-color: ${colors.darkBlue};\n  }\n`;\n\nconst Button = styled.button`\n  ${buttonLinkMixin};\n`;\n\nexport { buttonLinkMixin, Button };","// KnotView\n// - contains knot and content\n// - handles state for steps\n// - could be split up more as this gets more complex\n// - ideally handle routing here for individual steps\n\n// TODO:\n// - think about architecture a bit:\n\n// routing\n// - probably needs to be handled higher up\n// - forward and backward steps change links\n// - each link contains an animation\n\n\n// animations\n// - one animation must end before the next starts\n// - if attached to the route, we must immediately flick animation to start / finish\n// ... of the previous, when switching\n// - may be best to store animations within knot jsx\n// - try to get common animations in the same file though.\n// - use simple for overview, and detailed for animations?\n\n\n\nimport React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { buttonLinkMixin, Button } from './Buttons';\n// import Chevron from './Chevron';\nimport { View } from '../style/Layout';\nimport { Title, Paragraph } from '../style/Typography';\nimport { breakpoint, colors } from '../style/styleVariables';\n\nconst Info = styled.article`\n  padding: 1rem 1rem 1.5rem;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: ${colors.white};\n  @media (min-width: ${breakpoint.tablet}px) {\n    flex: 1;\n    max-width: calc(50% - 1rem);\n    margin-right: 1rem;\n    padding: 1.5rem;\n  }\n`;\n\nconst Knot = styled.div`\n  padding: 1rem;\n  display: flex;\n  justify-content: center;\n  @media (min-width: ${breakpoint.tablet}px) {\n    flex: 1;\n    max-width: calc(50% - 1rem);\n    margin-left: 1rem;\n  }\n`;\n\nconst StepLink = styled(Link)`\n  ${buttonLinkMixin};\n  /* ${props => props.isBlack && `background-color: ${colors.black}`};\n  &:hover,\n  &:focus {\n    ${props => props.isBlack && `background-color: ${colors.black}`};\n  } */\n`;\n\nconst StepButton = styled(Button)`\n  ${buttonLinkMixin};\n  /* ${props => props.isBlack && `background-color: ${colors.black}`};\n  &:hover,\n  &:focus {\n    ${props => props.isBlack && `background-color: ${colors.black}`};\n  } */\n`;\n\n// TODO:\n// 1. disable button until animation has run\n\n// 2.\n// - routing of steps (need to handle this is App and routes.js)\n// - hard to achieve with animations perhaps\n// - more on this:\n// https://stackoverflow.com/questions/34343085/react-router-creating-nested-routes-with-no-component-nesting\n\n\n\nconst KnotView = ({ name, content, DetailedSvg, knotWidth, stepCount }) => {\n\n  const [step, getStep] = useState(0);\n  console.log('[content.jsx] step', step);\n\n  // const showBackButton\n  // const showStepButton\n\n  // stepCount in route, not button\n  // <Chevron direction=\"left\"/>\n\n  return (\n    <View isReverse>\n      <Info>\n        <Title>{step === 0 ? name : `Step ${step}`}</Title>\n        <Paragraph>{step === 0 ? content.intro : content[`step${step}`]}</Paragraph>\n        \n        {/* <StepLink to={`figure-8/step-${step + 1}`}>{`Step ${step + 1}`}\n          <Chevron fill=\"white\"/>\n        </StepLink> */}\n\n        <StepButton\n          onClick={() => step < stepCount ? getStep(step + 1) : null}\n          isBlack={step === stepCount}>\n          {step < stepCount ? `Step ${step + 1}` : 'Back to Knots' }\n          </StepButton>\n          \n      </Info>\n      {DetailedSvg &&\n        <Knot>\n          <DetailedSvg width={knotWidth} stepNumber={step}/>\n        </Knot>\n      }\n    </View>\n  );\n};\n\nexport default KnotView;","import React, { Fragment } from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport { colors } from '../style/styleVariables';\nconst {\n  green, grey, white, black, blue, red, mint,\n  purple, oliveGreen, orange, lightBlue, darkBlue, frontBlue, backBlue } = colors;\n\nconst dash = keyframes`\n  to {\n    stroke-dashoffset: 0;\n  }\n`;\n\nconst part = {\n  1: css`\n    animation: ${dash} 1.5095338134765625s linear forwards;\n    stroke-dasharray: 1509;\n    stroke-dashoffset: 1509;\n  `,\n  2: css`\n    animation: ${dash} 0.833247802734375s linear forwards;\n    stroke-dasharray: 833;\n    stroke-dashoffset: 833;\n  `,\n  3: css`\n    animation: ${dash} 0.45425347900390625s linear forwards;\n    stroke-dasharray: 454;\n    stroke-dashoffset: 454;\n  `,\n};\n\n\n/* pass in number for specific animation */\nconst Mask = styled.path`\n  stroke-width : 50;\n  stroke-miterlimit: 10;\n  fill: none;\n  ${props => props.animationNumber && part[props.animationNumber]};\n`;\n\nconst Rope = styled.path`\n  stroke-width : 40;\n  stroke-miterlimit: 10;\n  fill: none;\n  ${props => props.animationNumber && part[props.animationNumber]};\n`;\n\n\nconst Fig8Detailed = ({ width = 600, stepNumber = null }) => {\n  \n  console.log('fig 8 detailed');\n  console.log('stepNumber', stepNumber);\n\n  // TODO\n  // - split out parts of fig-8-detailed.svg and render on the page\n  // - may require more parts for animation to work ok\n  // - no z-index\n  // - what is on the bottom is on the top\n  // - think of pairing of front and back strands of rope\n  // - from this, work out what can be split out\n  // - id# currently shows step number\n\n  const maskStroke = lightBlue;\n  const ropeStroke = blue;\n  const harnessStroke = black;\n\n  return (\n    <svg\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xlink=\"http://www.w3.org/1999/xlink\"\n      x=\"0px\" y=\"0px\"\n      style={{\n        width,\n      }}\n      viewBox=\"0 0 604.147 1249.036\"\n      enableBackground=\"new 0 0 604.147 1249.036\"\n      xmlSpace=\"preserve\">\n\n\n    \n\n\n\n    <path id=\"4\" fill=\"none\" stroke={mint} stroke-width=\"40\" stroke-miterlimit=\"10\" d=\"M522.737,1128.647\n      c-29.976,26.748-86.563,45.836-169.926,47.923\"/>\n\n    <path id=\"7\" fill=\"none\" stroke={darkBlue} stroke-width=\"40\" stroke-miterlimit=\"10\" d=\"M290.421,0.096v273.472\n      c0,44.578-18.043,84.941-47.223,114.187L85.224,557.307C56.042,586.551,38,626.915,38,671.493\n      c0,56.25,57.42,124.666,130.668,124.666c72.086,0,150.665-39.379,150.665-128.666c0-80.084-111.228-154.688-111.228-154.688\n      s-28.517-20.729-38.017-30.063\"/>\n\n\n    {/* <Mask id=\"1-base\" stroke={lightBlue} d=\"M271.667,0v272.16\n      c0,44.578-18.043,84.941-47.223,114.187L67.224,543.64C38.042,572.884,20,613.248,20,657.826\n      c0,89.287,72.381,161.666,161.668,161.666c89.286,0,161.665-61.583,161.665-161.666c0-73.199-122.229-158.688-122.229-158.688\n      s-28.517-20.729-38.017-30.063\"/> */}\n      \n    <Rope id=\"1\" stroke={frontBlue} d=\"M271.667,0v272.16\n      c0,44.578-18.043,84.941-47.223,114.187L67.224,543.64C38.042,572.884,20,613.248,20,657.826\n      c0,89.287,72.381,161.666,161.668,161.666c89.286,0,161.665-61.583,161.665-161.666c0-73.199-122.229-158.688-122.229-158.688\n      s-28.517-20.729-38.017-30.063\"/>\n\n\n\n    <path id=\"6\" fill=\"none\" stroke={purple} stroke-width=\"40\" stroke-miterlimit=\"10\" d=\"M126.733,443.159\n      c-25.878-26.906-52.025-79.667-52.025-125.881c0-87.536,98.759-168.869,197.236-168.869s181.238,95.426,181.238,187.236\n      c0,54.264-5.762,90.264-53.558,138.415c-50.203,50.35-76.06,76.1-76.06,76.1\"/>\n\n    <path id=\"2\" fill=\"none\" stroke={red} stroke-width=\"40\" stroke-miterlimit=\"10\" d=\"M141.254,429.241\n      c-25.167-26.167-40.976-56.333-40.976-101.277c0-75.556,72.379-148.666,161.666-148.666s161.668,72.38,161.668,161.666\n      c0,44.578-18.043,84.941-47.223,114.187l-73.969,74.008\"/>\n\n\n    {/* LEFT BUCKLE: this needs to be split into 2: */}\n    {/* 2nd part goes behind mint */}\n    <path fill=\"none\" stroke={grey} stroke-width=\"50\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" d=\"M95.624,1221.036\n      c0,0,131.318-324.546,279.523,0\"/>\n\n\n    <path id=\"5\" fill=\"none\" stroke={green} stroke-width=\"40\" stroke-miterlimit=\"10\" d=\"M280.754,592.408l-37.24,37.585\n      c-25.694,25.753-41.582,61.294-41.582,100.548l0.488,152.868c0,140,65.667,163.667,123,143.667\n      c95.334-40,222.667-24.667,222.667,50.666c0,18.257-8.411,35.754-25.26,50.825\"/>\n\n    <path id=\"3\" fill=\"none\" stroke={orange} stroke-width=\"40\" stroke-miterlimit=\"10\" d=\"M352.672,1176.576\n      c-4.996,0.125-10.088,0.188-15.276,0.188c-108.475,0-165.194-74.855-165.194-179.345s-0.006-271.015-0.006-271.015\n      c0-44.578,18.043-84.941,47.223-114.188l40.669-40.142\"/>\n\n\n    {/* RIGHT BUCKLE: */}\n    <path fill=\"none\" stroke={grey} stroke-width=\"50\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" d=\"M299.624,1224.036\n      c0,0,131.318-324.546,279.523,0\"/>\n\n\n    \n\n      {/* {(!stepNumber || stepNumber > 0) && \n        <Fragment>\n          <Mask\n          stroke={maskStroke}\n          animationNumber={stepNumber > 0 && 1}\n          d=\"M541.89,2.733v272.16c0,44.578-18.043,84.941-47.223,114.187L337.446,546.373c-29.181,29.244-47.224,69.607-47.224,114.186c0,89.287,72.381,161.666,161.668,161.666c89.286,0,161.665-72.379,s-16.28-11.394-36.874-29.458\"/>\n        \n        <Rope\n          stroke={ropeStroke}\n          animationNumber={stepNumber > 0 && 1}\n          d=\"M541.89,2.733v272.16c0,44.578-18.043,84.941-47.223,114.187L337.446,546.373c-29.181,29.244-47.224,69.607-47.224,114.186c0,89.287,72.381,161.666,161.668,161.666c89.286,0,161.665-72.379,161.665-161.666c0-73.199-122.229-158.688-122.229-158.688s-16.28-11.394-36.874-29.458\"/>\n        </Fragment>\n      } */}\n\n      {/* {(!stepNumber || stepNumber > 1) &&\n        <Fragment>\n          <Mask\n            stroke={maskStroke}\n            animationNumber={stepNumber > 1 && 2}\n            d=\"M410.479,428.184c-22.037-26.126-39.978-56.11-39.978-84.486c0-89.286,72.379-161.666,161.665-161.666c89.287,0,161.668,72.38,161.668,161.666c0,44.578-18.043,84.941-47.223,114.187l-72.945,72.978\"/>\n\n          <Rope\n            stroke={ropeStroke}\n            animationNumber={stepNumber > 1 && 2}\n            d=\"M410.479,428.184c-22.037-26.126-39.978-56.11-39.978-84.486c0-89.286,72.379-161.666,161.665-161.666c89.287,0,161.668,72.38,161.668,161.666c0,44.578-18.043,84.941-47.223,114.187l-72.945,72.978\"/>\n        </Fragment>\n      } */}\n\n      {/* {(!stepNumber || stepNumber > 2) &&\n        <Fragment>\n          <Mask\n            stroke={maskStroke}\n            animationNumber={stepNumber > 2 && 3}\n            d=\"M528.934,575.639l-39.293,39.311c-29.18,29.246-47.223,69.609-47.223,114.188L442.402,1001\"/>\n          \n          <Rope\n            stroke={ropeStroke}\n            animationNumber={stepNumber > 2 && 3}\n            d=\"M528.934,575.639l-39.293,39.311c-29.18,29.246-47.223,69.609-47.223,114.188L442.402,1001\"/>\n        </Fragment>\n      } */}\n    </svg>\n  );\n};\n\nexport default Fig8Detailed;","import styled from 'styled-components';\nimport { colors } from '../../style/styleVariables';\n\nconst Mask = styled.path`\n  stroke-width : 60;\n  fill: none;\n  stroke: ${colors.lightBlue};\n`;\n\nconst Rope = styled.path`\n  stroke-width : 40;\n  fill: none;\n`;\n\nconst Carabiner = styled.path`\n  fill : ${colors.grey};\n  stroke: ${colors.lightBlue};\n  stroke-width: 20;\n`;\n\nexport {\n  Mask, Rope, Carabiner\n};","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Mask, Rope } from '../common/knotStyles';\nimport { colors } from '../../style/styleVariables';\nimport { darkenFunc } from '../../style/styleFunctions';\n\n// Simple, static figure 8 in the menu\n\n// METHOD:\n// 1 - make file in illustrator / figma\n// 2 - split up path parts to only go through 180 degrees.\n// This will ensure morph doesn't cross over / look weird\n// 3 - https://editor.method.ac/ - for further path editing can be done online with \n// 4 - https://shapeshifter.design/ - path normalisation / same number of points or instructions in path\n// ^ This is required to make a smooth morph\n\n// MORE INFO:\n// https://css-tricks.com/svg-shape-morphing-works/\n// https://www.sarasoueidan.com/blog/svg-tips-for-designers/\n// https://github.com/juliangarnier/anime/issues/256\n\nconst pathOne = \"M 270.667 0 C 270.667 90.72 270.667 181.439 270.667 272.159 C 270.667 316.737 252.624 357.1 223.444 386.346 C 197.241 412.562 171.037 438.777 144.834 464.993 C 118.631 491.209 92.427 517.424 66.224 543.64 C 37.042 572.884 19 613.247 19 657.825 C 19 747.112 91.381 819.491 180.668 819.491\";\nconst pathOneHover = \"M 255.667 0 C 255.667 0 255.667 279.391 255.667 318.287 C 255.667 357.183 247.355 377.183 223.855 399.683 C 200.355 422.183 176.355 438.683 160.855 455.683 C 145.355 472.683 129.855 489.183 129.855 528.683 C 129.855 550.933 136.262 571.433 149.692 586.37 C 163.123 601.308 183.576 610.683 211.669 610.683\";\n\nconst pathTwo = \"M 181.668 819.491 C 270.954 819.491 343.333 747.112 343.333 657.825 C 343.333 584.626 221.104 499.137 221.104 499.137 C 221.104 499.137 204.824 487.742 184.23 469.678\"\nconst pathTwoHover = \"M 211.669 610.683 C 260.855 610.683 293.855 581.683 293.855 548.683 C 293.855 510.183 262.855 500.183 242.855 486.183 C 222.855 472.183 214.355 467.183 201.855 452.683\";\n\nconst pathThree = \"M 140.257 425.45 C 118.219 399.324 100.278 369.34 100.278 340.964 C 100.278 251.678 172.657 179.298 261.944 179.298 C 351.231 179.298 423.612 251.678 423.612 340.964 C 423.612 385.542 405.569 425.905 376.389 455.151 C 352.074 479.477 327.759 503.804 303.444 528.13\";\nconst pathThreeHover = \"M 169.187 413.851 C 158.354 399.433 152.52 385.933 152.52 367.851 C 152.52 326.851 196.354 298.183 252.604 308.433 C 308.854 318.683 322.188 350.849 319.854 376.516 C 317.52 402.183 304.854 416.516 290.854 428.516 C 276.854 440.516 270.104 447.183 257.104 465.683\";\n\nconst pathFour = \"M 258.712 572.905 C 252.163 579.457 245.614 586.009 239.065 592.561 C 232.517 599.113 225.968 605.665 219.419 612.217 C 190.239 641.463 172.196 681.826 172.196 726.405 L 172.202 997.42\";\nconst pathFourHover = \"M 230.521 509.516 C 230.521 509.516 224.855 517.516 219.188 524.516 C 195.855 555.849 204.196 571.826 204.196 616.404 C 204.197 679.907 204.198 743.409 204.199 806.912 L 204.202 997.419\";\n\nconst HoverFig8 = styled.svg`\n  pointer-events: none;\n  path {\n    transition: 0.5s ease;\n  }\n`;\n\nconst BlueRope = styled(Rope)`\n  stroke: ${props => props.ishovered ?\n    css`${darkenFunc(0.2, colors.blue)}` : \n    colors.blue};\n`;\n\nconst BasicFig8 = ({ width = 500, ishovered }) => {\n\n  return (\n    <HoverFig8\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xlink=\"http://www.w3.org/1999/xlink\"\n      x=\"0px\" y=\"0px\"\n      style={{\n        width,\n      }}\n      viewBox=\"0 0 443.612 997.419\"\n      enable-background=\"new 0 0 443.612 997.419\"\n      xmlSpace=\"preserve\">\n\n        <Mask d={ishovered ? pathOneHover : pathOne}/>\n        <BlueRope\n          d={ishovered ? pathOneHover : pathOne}\n          ishovered={ishovered}/>\n\n        <Mask d={ishovered ? pathTwoHover : pathTwo}/>\n        <BlueRope\n          d={ishovered ? pathTwoHover : pathTwo}\n          ishovered={ishovered}/>\n\n        <Mask d={ishovered ? pathThreeHover : pathThree}/>\n        <BlueRope\n          d={ishovered ? pathThreeHover : pathThree}\n          ishovered={ishovered}/>\n\n        <Mask d={ishovered ? pathFourHover : pathFour}/>\n        <BlueRope\n          d={ishovered ? pathFourHover : pathFour}\n          ishovered={ishovered}/>\n\n    </HoverFig8>\n  );\n};\n\nexport default BasicFig8;","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Mask, Rope } from '../common/knotStyles';\nimport { colors } from '../../style/styleVariables';\nimport { darkenFunc } from '../../style/styleFunctions';\n\nconst pathOne = \"M 214.054 0 C 214.054 68.019 214.054 136.039 214.054 204.058 C 216.531 236.327 207.065 315.808 149.382 375.579 C 77.279 450.293 22.448 500.103 20.038 609.563 C 17.628 719.023 129.498 821.052 214.054 821.052 C 298.609 821.052 408.07 796.147 408.07 649.33\";\nconst pathOneHover = \"M 134.054 0 C 134.054 0 134.054 242 134.054 299.5 C 134.054 357 124 377.5 77 424.5 C 30 471.5 20 500.5 20 543.5 C 20 586.5 52.5 649.33 134.054 649.33 C 215.608 649.33 248 598 248 559\";\n\nconst pathTwo = \"M 408.07 649.33 C 408.07 502.513 328.586 495.082 271.295 495.082 C 203.911 495.082 141.097 545.644 95.129 632.51 C 49.161 719.375 20.038 842.543 20.038 987.753\"\nconst pathTwoHover = \"M 248 559 C 248 520 191.345 483.5 134.054 483.5 C 69.451 483.5 18 545 28 655 C 38 765 84.5 850 84.5 987.753\";\n\nconst pathThree = \"M 175.693 770 C 175.693 806.459 175.693 842.918 175.693 879.376 L 175.693 988.753\";\nconst pathThreeHover = \"M 105.286 553.5 C 111.169 575.247 115 599.775 115 628 L 115 987.753\";\n\nconst pathFour = \"M 175.9 769.947 C 175.9 700.455 162.689 646.249 145.074 599.259 C 127.459 552.269 105.441 512.495 87.826 471.865 C 70.211 431.235 57 389.749 57 339.337\";\nconst pathFourHover = \"M 105.286 554 C 85.844 482.133 44 440.643 44 396.5 C 44 396.421 44 396.343 44 396.264 C 44 362.154 58.077 331.387 80.5 312\";\n\nconst pathFive = \"M 57 339.337 C 57 265.077 100.985 164 214.261 164 C 334.165 164 370.317 267.473 370.317 339.337\";\nconst pathFiveHover = \"M 80 312.236 C 95.376 298.942 114.676 291 136.054 291 C 157.432 291 177.045 298.942 192.792 312.236\";\n\nconst pathSix = \"M 369.9 340 C 369.9 390.412 356.689 431.898 339.074 472.528 C 321.459 513.158 299.441 552.932 281.826 599.922 C 264.211 646.912 251 701.118 251 770.61\";\nconst pathSixHover = \"M 192.75 312.25 C 215.715 331.637 230.458 362.404 230.458 396.514 C 230.459 396.526 230.459 396.538 230.46 396.55 C 230.46 440.161 189.12 482.284 169.25 552.25\";\n\nconst pathSeven = \"M 251 771 C 251 807.459 251 843.918 251 880.376 L 251 989.753\";\nconst pathSevenHover = \"M 170.429 552 C 164.141 574.221 160 599.243 160 628 L 160 987.753\";\n\nconst HoverBowline = styled.svg`\n  pointer-events: none;\n  path {\n    transition: 0.5s ease;\n  }\n`;\n\nconst PurpleRope = styled(Rope)`\n  stroke: ${props => props.ishovered ?\n    css`${darkenFunc(0.2, colors.purple)}` : \n    colors.purple};\n`;\n\nconst BasicBowline = ({ width = 500, ishovered }) => {\n  return (\n    <HoverBowline\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xlink=\"http://www.w3.org/1999/xlink\"\n      x=\"0px\" y=\"0px\"\n      style={{\n        width,\n      }}\n      viewBox=\"0 0 443.612 997.419\"\n      enable-background=\"new 0 0 443.612 997.419\"\n      xmlSpace=\"preserve\">\n\n        <Mask d={ishovered ? pathFiveHover : pathFive}/>\n        <PurpleRope\n          d={ishovered ? pathFiveHover : pathFive}\n          ishovered={ishovered}/>\n\n        <Mask d={ishovered ? pathThreeHover : pathThree}/>\n        <PurpleRope\n          d={ishovered ? pathThreeHover : pathThree}\n          ishovered={ishovered}/>\n\n        <Mask d={ishovered ? pathSevenHover : pathSeven}/>\n        <PurpleRope\n          d={ishovered ? pathSevenHover : pathSeven}\n          ishovered={ishovered}/>\n\n        <Mask d={ishovered ? pathOneHover : pathOne}/>\n        <PurpleRope\n          d={ishovered ? pathOneHover : pathOne}\n          ishovered={ishovered}/>\n\n        <Mask d={ishovered ? pathTwoHover : pathTwo}/>\n        <PurpleRope\n          d={ishovered ? pathTwoHover : pathTwo}\n          ishovered={ishovered}/>\n\n        <Mask d={ishovered ? pathFourHover : pathFour}/>\n        <PurpleRope\n          d={ishovered ? pathFourHover : pathFour}\n          ishovered={ishovered}/>\n\n        <Mask d={ishovered ? pathSixHover : pathSix}/>\n        <PurpleRope\n          d={ishovered ? pathSixHover : pathSix}\n          ishovered={ishovered}/>\n\n    </HoverBowline>\n  );\n};\n\nexport default BasicBowline;","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Mask, Rope, Carabiner } from '../common/knotStyles';\nimport { colors } from '../../style/styleVariables';\nimport { darkenFunc } from '../../style/styleFunctions';\n\nconst pathOne = \"M472.504 1009C472.504 1009 472.504 518.5 472.504 457.5C472.504 396.5 447.504 345 413.004 345\";\nconst pathOneHover = \"M497.504 1009C497.504 1009 497.504 508.5 497.504 457.5C497.504 406.5 482.5 387 451.004 387\";\n\nconst pathTwo = \"M413.009 345C378.509 345 288.509 405 288.509 531.5C288.509 658 281.008 922.5 412.009 922.5\";\nconst pathTwoHover = \"M451.009 387C416.509 387 387 435 387 513.5C387 592 406 663 460.009 663\";\n\nconst pathThree = \"M411.579 922.5C542.581 922.5 659.079 806.5 659.079 511.5\";\nconst pathThreeHover = \"M459.579 663C538 663 646.079 619 646.079 511.5\";\n\nconst pathFour = \"M660 511C660 396.5 634.5 364 607 364\";\nconst pathFourHover = \"M646.5 511.5C646.5 397 621 377.5 593.5 377.5\";\n\nconst pathFive = \"M 606.5 364.5 C 579 364.5 565 398.5 565 457.5 C 565 481.986 565 585.308 565 702\";\nconst pathFiveHover = \"M 593.5 377.5 C 566 377.5 552 398.5 552 457.5 C 552 481.986 552 473.308 552 590\";\n\nconst pathSix = \"M 565 702 C 565 725.6 565 761.308 565 811.637 C 565 861.966 565 926.917 565 1009\";\nconst pathSixHover = \"M 552 590 C 552 613.6 552 677.308 552 755.637 C 552 833.966 552 926.917 552 1009\";\n\nconst carabinerPath = \"M685.002 10.5H673.695L675.077 21.7221C679.014 53.6918 683.203 87.0829 687.486 121.224C695.183 182.584 703.185 246.367 710.572 308.677C716.104 355.342 707.507 390.874 676.556 416.127C644.611 442.19 586.977 459.019 489.696 462.005C297.551 467.902 208.484 381.164 182.818 315.366C169.088 280.166 160.741 257.865 155.836 244.392C154.253 240.043 153.03 236.617 152.1 233.976C164.912 225.291 175.253 211.847 177.875 195.593C179.119 187.878 182.239 169.162 185.053 152.337C186.459 143.933 187.787 136.013 188.763 130.194C188.85 129.676 188.934 129.176 189.015 128.693C207.85 127.289 220.146 121.249 228.001 114.186C232.407 110.225 235.157 106.167 236.834 102.945C237.67 101.338 238.238 99.9416 238.616 98.8674C238.805 98.3298 238.946 97.8709 239.05 97.5043C239.102 97.321 239.145 97.1604 239.18 97.0243C239.197 96.9562 239.212 96.8943 239.225 96.8386L239.244 96.7598L239.252 96.7239L239.256 96.7069C239.258 96.6987 239.26 96.6905 229.502 94.5L239.26 96.6905L239.298 96.5193L239.33 96.3469L253.33 21.8469L255.557 10H243.502H53.5025H45.1763L43.6679 18.1884C43.2274 20.58 42.7119 23.5217 42.0252 27.4404C40.9489 33.5826 39.452 42.1249 37.1637 54.7113C34.6044 68.7891 39.486 81.0107 47.7023 90.488C51.943 95.3795 57.1121 99.6139 62.7706 103.203C62.2119 103.255 61.646 103.314 61.0734 103.382C49.2591 104.785 34.0679 109.938 22.944 125.079C19.1814 130.201 15.8922 135.17 13.5986 140.734C11.2346 146.469 10.1016 152.393 10.004 159.36C9.92527 164.975 11.0365 171.807 13.0038 180.135C15 188.586 18.0393 199.217 22.1647 212.651C27.4906 229.995 34.7469 252.39 44.1271 281.341C49.265 297.199 55.0401 315.023 61.4842 335.062C80.214 393.302 114.774 455.35 181.528 502.718C248.222 550.043 346.043 582 490.002 582C634.369 582 723.408 540.928 774.661 485.475C825.804 430.14 837.981 361.91 831.423 310.241C825.171 260.989 815.921 188.238 808.234 127.801C804.39 97.5818 800.937 70.4411 798.445 50.855L795.499 27.7016L794.701 21.4236L794.493 19.7928L794.44 19.3775L794.427 19.2727L794.423 19.2464L794.423 19.2398C794.422 19.2383 794.422 19.2376 784.502 20.5L794.422 19.2376L793.31 10.5H784.502H685.002Z\";\n\nconst GreenRope = styled(Rope)`\n  stroke: ${props => props.ishovered ?\n    css`${darkenFunc(0.1, colors.oliveGreen)}` : \n    colors.oliveGreen};\n`;\n\nconst HoverClove = styled.svg`\n  pointer-events: none;\n  path {\n    transition: 0.5s ease;\n  }\n`;\n\nconst BasicClove = ({ width = 500, ishovered }) => {\n\n  return (\n    <HoverClove\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xlink=\"http://www.w3.org/1999/xlink\"\n      x=\"0px\" y=\"0px\"\n      style={{\n        width,\n      }}\n      viewBox=\"0 0 844 1009\"\n      xmlSpace=\"preserve\">\n\n      <Mask d={ishovered ? pathSixHover : pathSix} />\n      <GreenRope\n        d={ishovered ? pathSixHover : pathSix}\n        ishovered={ishovered}/>\n\n      <Mask d={ishovered ? pathThreeHover : pathThree} />\n      <GreenRope\n        d={ishovered ? pathThreeHover : pathThree}\n        ishovered={ishovered}/>\n\n      <Mask d={ishovered ? pathFourHover : pathFour}/>\n      <GreenRope\n        d={ishovered ? pathFourHover : pathFour}\n        ishovered={ishovered}/>\n\n      <Mask d={ishovered ? pathOneHover : pathOne} />\n      <GreenRope\n        d={ishovered ? pathOneHover : pathOne}\n        ishovered={ishovered}/>\n\n      <Carabiner d={carabinerPath} />\n\n      <Mask d={ishovered ? pathTwoHover : pathTwo}/>\n      <GreenRope\n        d={ishovered ? pathTwoHover : pathTwo}\n        ishovered={ishovered}/>\n\n      <Mask d={ishovered ? pathFiveHover : pathFive} />\n      <GreenRope\n        d={ishovered ? pathFiveHover : pathFive}\n        ishovered={ishovered}/>\n\n    </HoverClove>\n  );\n};\n\nexport default BasicClove;","const content = {\n  figEight: {\n    title: 'Figure 8',\n    intro: 'The figure 8 knot is the most popular knot for tying the rope to your harness when climbing.',\n    step1: 'This is Step 1',\n    step2: 'This is Step 2',\n    step3: 'This is Step 3',\n  },\n  bowline: {\n    title: 'Bowline',\n    intro: '',\n    step1: 'This is Step 1',\n    step2: 'This is Step 2',\n    step3: 'This is Step 3',\n  },\n  clove: {\n    title: 'Clove Hitch',\n    intro: '',\n    step1: 'This is Step 1',\n    step2: 'This is Step 2',\n    step3: 'This is Step 3',\n  },\n  italian: {\n    title: 'Italian Hitch',\n    intro: '',\n    step1: 'This is Step 1',\n    step2: 'This is Step 2',\n    step3: 'This is Step 3',\n  }\n};\n\nexport default content;","\n// TODO\n// - add metadata (e.g. metadata: getMetadata('home'))\n// - add terms pages, hidden from menu\n// - add content here\nimport MenuView from './components/MenuView';\nimport KnotView from './components/KnotView';\n\n// SimpleSvg and detailedSvg\n// import Figure8 from './knots/Figure8';\nimport Fig8Detailed from './knots/Fig8Detailed';\nimport BasicFig8 from './knots/figure8/BasicFig8';\nimport BasicBowline from './knots/bowline/BasicBowline';\nimport BasicClove from './knots/clove/BasicClove';\n\nimport { colors } from './style/styleVariables';\nimport content from './content';\nconst { grey, blue, purple, oliveGreen, orange } = colors;\nconst { figEight, bowline, clove, italian } = content;\n\n\nexport default [\n  {\n    exact: true,\n    path: '/',\n    component: MenuView,\n    name: 'Browse Knots',\n    colour: grey,\n  },\n  {\n    exact: true,\n    path: '/figure-8',\n    component: KnotView,\n    SimpleSvg: BasicFig8,\n    DetailedSvg: Fig8Detailed,\n    // 500 previously. Should be reponsive though we need to have this specific to the knot\n    knotWidth: 220,\n    stepCount: 7,\n    name: 'Figure 8',\n    colour: blue,\n    content: figEight,\n  },\n  {\n    exact: true,\n    path: '/bowline',\n    component: KnotView,\n    SimpleSvg: BasicBowline,\n    name: 'Bowline',\n    colour: purple,\n    content: bowline,\n  },\n  {\n    exact: true,\n    path: '/clove-hitch',\n    component: KnotView,\n    SimpleSvg: BasicClove,\n    name: 'Clove Hitch',\n    colour: oliveGreen,\n    content: clove,\n  },\n  {\n    exact: true,\n    path: '/italian-hitch',\n    component: KnotView,\n    name: 'Italian Hitch',\n    colour: orange,\n    content: italian,\n  },\n];","import React from \"react\";\n\nconst Chevron = ({\n  titleTag = \"Arrow\",\n  width = 30,\n  fill = \"#000\",\n  direction = \"right\"\n}) => {\n  const degree = {\n    left: 90,\n    right: -90,\n    up: -180,\n    down: 0\n  };\n  const arrowDirection = `rotate(${degree[direction]}deg)`;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      style={{\n        width,\n        transform: arrowDirection,\n        transformOrigin: \"50% 50%\"\n      }}\n    >\n      <title>{titleTag}</title>\n      <defs>\n        <polygon\n          points=\"0.00025 0.000323580861 19.935 0.000323580861 19.935 12.2483 0.00025 12.2483\"\n        ></polygon>\n      </defs>\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <path\n          fill={fill}\n          d=\"M19.532,0.4235 C19.051,-0.1055 18.232,-0.1435 17.703,0.3375 C17.673,0.3645 17.644,0.3935 17.617,0.4235 L9.956,8.6515 L2.318,0.4235 C1.838,-0.1055 1.018,-0.1435 0.49,0.3375 C0.46,0.3645 0.43,0.3935 0.403,0.4235 C-0.134,1.0095 -0.134,1.9095 0.403,2.4955 L8.666,11.4045 L9.049,11.8225 C9.461,12.3215 10.199,12.3925 10.698,11.9805 C10.756,11.9325 10.808,11.8805 10.856,11.8225 L11.239,11.4045 L19.532,2.4955 C20.07,1.9095 20.07,1.0095 19.532,0.4235\"\n        ></path>\n      </g>\n    </svg>\n  );\n};\n\nexport default Chevron;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nimport { containerMixin } from '../style/Layout';\nimport { subTitleMixin } from '../style/Typography';\nimport Chevron from '../components/Chevron';\nimport { colors } from '../style/styleVariables';\n\nconst NavBar = styled.div`\n  height: 5rem;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  background-color: ${colors.white};\n  box-shadow: 0.25rem 0.25rem 0.5rem rgba(0, 0, 0, 0.1);\n`;\n\nconst NavContainer = styled.nav`\n  ${containerMixin};\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  ${subTitleMixin};\n  color: ${colors.black};\n`;\n\nconst NavLink = styled(Link)`\n  color: ${props => props.colour};\n  text-decoration: none;\n  padding-left: 0.5rem;\n`;\n\nconst BackLink = styled(Link)`\n  color: transparent;\n  text-decoration: none;\n  padding-right: 1rem;\n  display: flex;\n`;\n\nconst Nav = ({ name, path, colour }) => {\n  return (\n    <NavBar>\n      <NavContainer>\n        {path !== '/' && <BackLink to='/'><Chevron direction=\"left\"/></BackLink>}\n        Climbing Knots | <NavLink to={path} colour={colour}>{name}</NavLink>\n      </NavContainer>\n    </NavBar>\n  );\n};\n\nexport default Nav;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport routes from './routes';\nimport Nav from './components/Nav';\nimport { colors, fontFamily} from './style/styleVariables';\nimport './style/reset.css';\n\n// figma \n// https://www.figma.com/proto/GPZh3JwWvqXSRKI0Lc4kqSa9/Knots---mobile?scaling=contain&node-id=1%3A3\n\n// TODO:\n// 1. setup with routing\n// 2. remove unused stuff\n// 3. port to typescript\n// 4. internationalisation (i18n)\n// 5. transitions (slide in/out)\n\nconst AppContainer = styled.div`\n  max-height: 100vh;\n  background-color: ${colors.lightBlue};\n  @import url('https://fonts.googleapis.com/css?family=Asap:400,600');\n  font-family: ${fontFamily.main};\n  font-size: 1.25rem;\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n`;\n\nconst Main = styled.main`\n  padding-top: 5rem;\n  min-height: 640px;\n  max-height: 100vh;\n`;\n\nconst App = () => {\n\n  return (\n    <AppContainer>\n      <Router>\n        <Switch>\n          {routes.map(route => {\n            const View = route.component;\n            // const hasSteps = route.stepCount;\n            // if (hasSteps) {\n            //   new Array(route.stepCount).map((v, i) => <Route key={`${route.path}/${i}`}} path={route.path} />)\n            // }\n            return (\n              <Route key={route.path} path={route.path} exact={route.exact}>\n                <Nav {...route} />\n                <Main>\n                  <View {...route} />\n                </Main>\n              </Route>\n            );\n          })}\n        </Switch>\n      </Router>\n    </AppContainer>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}